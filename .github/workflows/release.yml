name: Release
on:
  workflow_dispatch:
    inputs:
      url:
        required: false
      

jobs:
  check-version:
    outputs:
      package-version: ${{ steps.set-version.outputs.package-version-from-json }}
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v1
    - name: Set version
      id: set-version
      run: |
        PACKAGEJSON_VER=v$(cat package.json | jq -r '.version')
        echo "::set-output name=package-version-from-json::$PACKAGEJSON_VER"
      
  create-release:
    needs: check-version
    if: success()
    runs-on: ubuntu-latest
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ needs.check-version.outputs.package-version }}
        release_name: Release ${{ needs.check-version.outputs.package-version }}
        draft: false
        prerelease: false
    - name: Zip build files
      run: zip -r ./dist/build-files.zip dist 
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./dist
        asset_name: build-files.zip
        asset_content_type: application/zip
